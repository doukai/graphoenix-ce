plugins {
    id 'java-library'
    id 'maven-publish'
}

group 'org.graphoenix'
version '0.1.3'

repositories {
    mavenCentral()
    jcenter()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    implementation project(':graphoenix-core')
    implementation project(':graphoenix-java')
    implementation 'org.graphoenix:nozdormu-inject:0.1.0'
    implementation 'org.graphoenix:nozdormu-config:0.1.0'
    implementation 'com.github.jsqlparser:jsqlparser:4.8'
    implementation 'com.github.vertical-blank:sql-formatter:2.0.3'

    annotationProcessor project(':graphoenix-core')
    annotationProcessor 'org.graphoenix:nozdormu-inject:0.1.0'
    annotationProcessor 'org.graphoenix:nozdormu-config:0.1.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.graphoenix'
            artifactId = 'graphoenix-sql'

            from components.java

            pom {
                name = 'graphoenix-sql'
                description = 'graphoenix-sql'
                url = 'https://github.com/doukai/graphoenix-ce'
                inceptionYear = '2023'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://spdx.org/licenses/MIT.html'
                    }
                }
                developers {
                    developer {
                        id = 'doukai'
                        name = 'Dou Kai'
                    }
                }
                scm {
                    url = 'https://github.com/doukai/graphoenix-ce'
                    connection = 'scm:git://github.com:doukai/graphoenix-ce.git'
                    developerConnection = 'scm:git://github.com:doukai/graphoenix-ce.git'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

tasks.build.doFirst {
    mkdir "$buildDir/jreleaser"
}

jreleaser {
    gitRootSearch = true
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}