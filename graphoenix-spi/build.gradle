plugins {
    id 'java-library'
    id 'antlr'
    id 'maven-publish'
}

group 'org.graphoenix'
version '0.1.0'

repositories {
    mavenCentral()
    jcenter()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    antlr('org.antlr:antlr4:4.9.3') {
        exclude group: 'org.glassfish', module: 'javax.json'
    }

    api 'io.projectreactor:reactor-core:3.4.16'
    api 'com.dslplatform:dsl-json:1.10.0'
    api 'org.eclipse.microprofile.graphql:microprofile-graphql-api:1.1.0'
    api 'jakarta.json:jakarta.json-api:2.1.1'
    api 'jakarta.json.bind:jakarta.json.bind-api:3.0.0'
    api 'jakarta.validation:jakarta.validation-api:3.0.1'
    api 'org.tinylog:tinylog-api:2.4.1'
    api 'org.antlr:antlr4-runtime:4.9.3'

    implementation 'org.graphoenix:nozdormu-spi:0.1.0'
    implementation 'org.antlr:ST4:4.3.2'
    implementation 'com.google.guava:guava:31.1-jre'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

generateGrammarSource {
    includes = ['Graphql.g4']
    maxHeapSize = "64m"
    arguments += ["-visitor"]
//    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/graphql/parser/antlr")
    outputDirectory = file('src/main/java/graphql/parser/antlr')
}
generateGrammarSource.inputs.dir('src/main/antlr')

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.graphoenix'
            artifactId = 'graphoenix-spi'

            from components.java

            pom {
                name = 'graphoenix-spi'
                description = 'graphoenix-spi'
                url = 'https://github.com/doukai/graphoenix-ce'
                inceptionYear = '2023'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://spdx.org/licenses/MIT.html'
                    }
                }
                developers {
                    developer {
                        id = 'doukai'
                        name = 'Dou Kai'
                    }
                }
                scm {
                    url = 'https://github.com/doukai/graphoenix-ce'
                    connection = 'scm:git://github.com:doukai/graphoenix-ce.git'
                    developerConnection = 'scm:git://github.com:doukai/graphoenix-ce.git'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

tasks.build.doFirst {
    mkdir "$buildDir/jreleaser"
}

jreleaser {
    gitRootSearch = true
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}