plugins {
    id 'java-library'
    id 'antlr'
    id 'maven-publish'
}

group 'org.graphoenix'

dependencies {
    antlr platform(project(':graphoenix-platform'))
    antlr('org.antlr:antlr4') {
        exclude group: 'org.glassfish', module: 'javax.json'
    }

    implementation platform(project(':graphoenix-platform'))

    api 'io.projectreactor:reactor-core'
    api 'com.dslplatform:dsl-json'
    api 'org.eclipse.microprofile.graphql:microprofile-graphql-api'
    api 'jakarta.json:jakarta.json-api'
    api 'jakarta.json.bind:jakarta.json.bind-api'
    api 'jakarta.validation:jakarta.validation-api'
    api 'org.tinylog:tinylog-api'
    api 'org.antlr:antlr4-runtime'

    implementation 'org.graphoenix:nozdormu-spi'
    implementation 'org.antlr:ST4'
    implementation 'com.google.guava:guava'

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

generateGrammarSource {
    includes = ['Graphql.g4']
    maxHeapSize = "64m"
    arguments += ["-visitor"]
//    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/graphql/parser/antlr")
    outputDirectory = file('src/main/java/graphql/parser/antlr')
}
generateGrammarSource.inputs.dir('src/main/antlr')