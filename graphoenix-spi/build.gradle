plugins {
    id 'java'
    id 'antlr'
}
apply plugin: 'maven'

group 'io.graphoenix'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile 'io.projectreactor:reactor-core:3.4.16'
    compile 'com.dslplatform:dsl-json:1.9.9'
    compile 'org.eclipse.microprofile.graphql:microprofile-graphql-api:1.1.0'
    compile 'jakarta.json:jakarta.json-api:2.1.1'
    compile 'jakarta.json.bind:jakarta.json.bind-api:3.0.0'
    compile 'jakarta.validation:jakarta.validation-api:3.0.1'
    compile 'org.tinylog:tinylog-api:2.4.1'

    antlr('org.antlr:antlr4:4.9.3') {
        exclude group: 'org.glassfish', module: 'javax.json'
    }
    implementation 'org.antlr:ST4:4.3.2'
    implementation 'com.google.guava:guava:31.1-jre'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

generateGrammarSource {
    includes = ['Graphql.g4']
    maxHeapSize = "64m"
    arguments += ["-visitor"]
//    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/graphql/parser/antlr")
    outputDirectory = file('src/main/java/graphql/parser/antlr')
}
generateGrammarSource.inputs.dir('src/main/antlr')