type User {
    id: ID
    login: String!
    password: String!
    name: String!
    age: Int
    disabled: Boolean
    sex: Sex
    userProfile: UserProfile @fetch(from: "id", to: "userId", protocol: LOCAL)
    organization: Organization @fetch(from: "organizationId", to: "id", anchor: true protocol: LOCAL)
    roles: [Role!] @fetch(from: "id", with: {type: "RoleUserRelation", to: "roleRef", from: "userRef"}, to: "id", protocol: LOCAL)
    mobileNumbers: [String!]
}

type UserProfile {
    id: ID
    userId: Int
    user: User
    email: String
    address: String
}

enum Sex {
    MAN
    FEMALE
}

type Role {
    id: ID
    name: String!
    roleType: [RoleType]!
    users: [User!]
}

enum RoleType {
    ADMIN
    USER
    ANONYMOUS
}

type Organization {
    id: ID
    name: String!
    above: Organization
    users: [User!] @fetch(from: "id", to: "organizationId", protocol: LOCAL)
}

type RoleUserRelation {
    id: ID @options(type: "Int", autoIncrement: true)
    userRef: String
    user: User @fetch(from: "userRef", to: "id", anchor: true, protocol: LOCAL)
    roleRef: String
    role: Role @fetch(from: "roleRef", to: "id", anchor: true, protocol: LOCAL)
}