type __Schema {
    id: ID
    types: [__Type!]! @map(from: "id" to: "schemaId")
    queryType: __Type! @map(from: "queryTypeName" to: "name" anchor: true)
    mutationType: __Type @map(from: "mutationTypeName" to: "name" anchor: true)
    subscriptionType: __Type @map(from: "subscriptionTypeName" to: "name" anchor: true)
    directives: [__Directive!]! @map(from: "id" to: "schemaId")
}

type __Type {
    name: ID! @options(type: "String")
    ofSchema: __Schema @map(from: "schemaId" to: "id" anchor: true)
    kind: __TypeKind!
    description: String

    # OBJECT and INTERFACE only
    fields: [__Field!] @map(from: "name" to: "ofTypeName")

    # OBJECT only
    interfaces: [__Type!] @map(from: "name" with: {type: "__TypeInterfaces" from: "typeName" to: "interfaceName"} to: "name")

    # INTERFACE and UNION only
    possibleTypes: [__Type!] @map(from: "name" with: {type: "__TypePossibleTypes" from: "typeName" to: "possibleTypeName"} to: "name")

    # ENUM only
    enumValues: [__EnumValue!] @map(from: "name" to: "ofTypeName")

    # INPUT_OBJECT only
    inputFields: [__InputValue!] @map(from: "name" to: "ofTypeName")

    # NON_NULL and LIST only
    ofType: __Type @map(from: "ofTypeName" to: "name" anchor: true)
}

type __Field {
    id: ID
    name: String
    ofType: __Type @map(from: "ofTypeName" to: "name" anchor: true)
    description: String
    args: [__InputValue!]! @map(from: "id" to: "fieldId")
    type: __Type! @map(from: "typeName" to: "name" anchor: true)
    deprecationReason: String
}

type __InputValue {
    id: ID
    name: String
    ofType: __Type @map(from: "ofTypeName" to: "name" anchor: true)
    fieldId: Int
    directiveName: String
    description: String
    type: __Type! @map(from: "typeName" to: "name" anchor: true)
    defaultValue: String
}

type __EnumValue {
    id: ID
    name: String
    ofType: __Type @map(from: "ofTypeName" to: "name" anchor: true)
    description: String
    deprecationReason: String
}

type __Directive {
    name: ID! @options(type: "String")
    ofSchema: __Schema @map(from: "schemaId" to: "id" anchor: true)
    description: String
    locations: [__DirectiveLocation!]!
    args: [__InputValue!]! @map(from: "name" to: "directiveName")
    isRepeatable: Boolean!
}
