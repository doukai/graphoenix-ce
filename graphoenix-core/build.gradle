buildscript {
    repositories {
        mavenLocal()
        jcenter()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'org.graphoenix:graphoenix-gradle-plugin:0.1.0'
    }
}

plugins {
    id 'java-library'
    id 'com.google.protobuf' version '0.9.1'
    id 'maven-publish'
}

apply plugin: 'io.graphoenix'

protobuf {
    protoc {
        // artifact = "com.google.protobuf:protoc:3.21.7"
        // for apple m1, please add protoc_platform=osx-x86_64 in $HOME/.gradle/gradle.properties
        if (project.hasProperty('protoc_platform')) {
            artifact = "com.google.protobuf:protoc:3.21.7:${protoc_platform}"
        } else {
            artifact = "com.google.protobuf:protoc:3.21.7"
        }
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.52.1'
        }
        reactor {
            artifact = "com.salesforce.servicelibs:reactor-grpc:1.2.3"
        }
        doc {
            artifact = "io.github.pseudomuto:protoc-gen-doc:1.5.1"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            reactor {}
            doc {
                option 'markdown,grpc-docs.md'
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/reactor'
        }
//        resources {
//            srcDirs 'build/generated/source/proto/main/doc'
//        }
    }
}

group 'org.graphoenix'
version '0.1.0'

repositories {
    mavenCentral()
    jcenter()
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

sourcesJar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

dependencies {
    api project(':graphoenix-spi')
    api project(':graphoenix-json')
    api 'com.google.auto.service:auto-service:1.0.1'

    implementation 'org.graphoenix:nozdormu-inject:0.1.0'
    implementation 'org.graphoenix:nozdormu-interceptor:0.1.0'
    implementation 'org.graphoenix:nozdormu-config:0.1.0'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.1'
    implementation 'org.tinylog:tinylog-impl:2.4.1'
    implementation 'org.tinylog:slf4j-tinylog:2.4.1'
    implementation 'org.tinylog:jcl-tinylog:2.4.1'

    runtimeOnly 'io.grpc:grpc-netty-shaded:1.52.1'
    implementation 'io.grpc:grpc-protobuf:1.52.1'
    implementation 'io.grpc:grpc-stub:1.52.1'
    implementation 'com.salesforce.servicelibs:reactor-grpc-stub:1.2.3'

    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+

    annotationProcessor project(':graphoenix-spi')
    annotationProcessor project(':graphoenix-json')
    annotationProcessor 'org.graphoenix:nozdormu-inject:0.1.0'
    annotationProcessor 'org.graphoenix:nozdormu-interceptor:0.1.0'
    annotationProcessor 'org.graphoenix:nozdormu-config:0.1.0'
    annotationProcessor 'com.google.auto.service:auto-service:1.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.graphoenix'
            artifactId = 'graphoenix-core'

            from components.java

            pom {
                name = 'graphoenix-core'
                description = 'graphoenix-core'
                url = 'https://github.com/doukai/graphoenix-ce'
                inceptionYear = '2023'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://spdx.org/licenses/MIT.html'
                    }
                }
                developers {
                    developer {
                        id = 'doukai'
                        name = 'Dou Kai'
                    }
                }
                scm {
                    url = 'https://github.com/doukai/graphoenix-ce'
                    connection = 'scm:git://github.com:doukai/graphoenix-ce.git'
                    developerConnection = 'scm:git://github.com:doukai/graphoenix-ce.git'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

tasks.build.doFirst {
    mkdir "$buildDir/jreleaser"
}

jreleaser {
    gitRootSearch = true
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}