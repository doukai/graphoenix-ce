input JsonSchema {
    minLength: Int
    maxLength: Int
    pattern: String
    format: String
    contentMediaType: String
    contentEncoding: String
    minimum: Float
    exclusiveMinimum: Float
    maximum: Float
    exclusiveMaximum: Float
    multipleOf: Float
    const: String
    enum: [String]
    items: JsonSchema
    minItems: Int
    maxItems: Int
    uniqueItems: Boolean
    allOf: [JsonSchema]
    anyOf: [JsonSchema]
    oneOf: [JsonSchema]
    not: JsonSchema
    properties: [Property]
    if: JsonSchema
    then: JsonSchema
    else: JsonSchema
    dependentRequired: [Property]
}

input Property {
    name: String!
    validation: JsonSchema
    required: [String]
}

directive @jsonSchema(
    minLength: Int
    maxLength: Int
    pattern: String
    format: String
    contentMediaType: String
    contentEncoding: String
    minimum: Float
    exclusiveMinimum: Float
    maximum: Float
    exclusiveMaximum: Float
    multipleOf: Float
    const: String
    enum: [String]
    items: JsonSchema
    minItems: Int
    maxItems: Int
    uniqueItems: Boolean
    allOf: [JsonSchema]
    anyOf: [JsonSchema]
    oneOf: [JsonSchema]
    not: JsonSchema
    properties: [Property]
    if: JsonSchema
    then: JsonSchema
    else: JsonSchema
    dependentRequired: [Property]
) on OBJECT | FIELD_DEFINITION | INPUT_OBJECT | INPUT_FIELD_DEFINITION